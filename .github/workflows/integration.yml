name: Integration

on:
    push:
        branches: ['main']
    pull_request:
        branches: ['main']

jobs:
    build:
        runs-on: self-hosted

        env:
            REACT_APP_NODE_ENV: ${{ secrets.REACT_APP_NODE_ENV }}
            REACT_APP_BE_URL: ${{ secrets.REACT_APP_BE_URL }}

        strategy:
            matrix:
                node-version: [16.x]

        steps:
            - uses: actions/checkout@v3

            - name: Use Node.js ${{ matrix.node-version }}
              uses: actions/setup-node@v3
              with:
                  node-version: ${{ matrix.node-version }}
                  cache: 'yarn'

            - name: Generate env file
              run: |
                  touch .env
                  echo REACT_APP_NODE_ENV = ${{ env.REACT_APP_NODE_ENV }} >> .env
                  echo REACT_APP_BE_URL = ${{ env.REACT_APP_BE_URL }} >> .env
                  cat .env

            - name: Install dependencies
              run: yarn install --immutable --immutable-cache --check-cache

            - name: Test if present
              run: npm run test --if-present

            - name: Generate build
              run: npm run build --if-present

            - name: Containerize
              run: npm run compose:up:prod

            # - name: Remove none tagged images
            #   run: docker images | grep "<none>" | awk '{print $3}' |xargs docker rmi -f

            - name: Remove all images that is not using by any running container
              run: docker images --format {{.Repository}}:{{.Tag}} | grep -vFf <(docker ps --format {{.Image}}) | xargs docker rmi -f
